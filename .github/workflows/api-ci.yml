name: API CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/api/**'
      - '.github/workflows/api-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/api/**'

jobs:
  lint-and-test:
    name: Lint and Test API
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-glx libglib2.0-0

      - name: Install Python dependencies
        working-directory: ./apps/api
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest black flake8 mypy

      - name: Run linting (flake8)
        working-directory: ./apps/api
        run: flake8 . --max-line-length=100 --extend-ignore=E203,W503

      - name: Run formatting check (black)
        working-directory: ./apps/api
        run: black --check .

      - name: Run type checking (mypy)
        working-directory: ./apps/api
        run: mypy . --ignore-missing-imports || true

      - name: Run tests
        working-directory: ./apps/api
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        run: pytest tests/ -v || echo "No tests found"

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./infra/docker/api.Dockerfile
          push: false
          tags: face-api-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy API
    runs-on: ubuntu-latest
    needs: [lint-and-test, build-docker]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Add your deployment steps here
      # - name: Deploy to production
      #   run: echo "Deploy to production server"