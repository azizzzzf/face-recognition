name: 🚀 Basic CI/CD Pipeline

on:
  push:
    branches: [ main, develop, face-recognition ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  CI: true
  FORCE_COLOR: 1
  # Test environment variables
  NODE_ENV: test
  NEXT_PUBLIC_APP_ENV: test

jobs:
  basic-checks:
    name: 🔍 Basic Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test environment
        run: npm run test:setup
        continue-on-error: false

      - name: Lint code
        run: npm run lint
        continue-on-error: true
        id: lint

      - name: Type check
        run: npm run type-check
        continue-on-error: true
        id: typecheck

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production

      - name: Run basic tests
        run: |
          echo "🧪 Running smoke tests..."
          if npm run test:smoke; then
            echo "✅ Smoke tests passed"
          else
            echo "❌ Smoke tests failed"
            exit 1
          fi

      - name: Check lint results
        if: steps.lint.outcome == 'failure'
        run: |
          echo "⚠️ Linting issues found - check the lint step above for details"
          echo "This won't fail the build but should be addressed"

      - name: Check type check results
        if: steps.typecheck.outcome == 'failure'
        run: |
          echo "⚠️ Type checking issues found - check the typecheck step above for details"
          echo "This won't fail the build but should be addressed"

  deployment-ready:
    name: 🚀 Deployment Readiness Check  
    runs-on: ubuntu-latest
    needs: basic-checks
    if: success() || failure()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Verify essential files exist
        run: |
          echo "🔍 Checking essential files..."
          
          if test -f package.json; then
            echo "✅ package.json exists"
          else
            echo "❌ package.json missing"
            exit 1
          fi
          
          if test -f next.config.ts; then
            echo "✅ next.config.ts exists"
          else
            echo "⚠️ next.config.ts missing (checking for next.config.js...)"
            if test -f next.config.js; then
              echo "✅ next.config.js exists"
            else
              echo "❌ No Next.js config found"
              exit 1
            fi
          fi
          
          if test -f tsconfig.json; then
            echo "✅ tsconfig.json exists"
          else
            echo "❌ tsconfig.json missing"
            exit 1
          fi
          
          if test -d .next; then
            echo "✅ Build output (.next) exists"
          else
            echo "❌ Build output missing - build may have failed"
            exit 1
          fi
          
          echo "🎉 All essential files verified"

  report-status:
    name: 📊 CI Status Report
    runs-on: ubuntu-latest
    needs: [basic-checks, deployment-ready]
    if: always()
    steps:
      - name: Generate status report
        run: |
          echo "## 🚀 Basic CI Pipeline Results"
          echo ""
          
          if [ "${{ needs.basic-checks.result }}" == "success" ]; then
            echo "✅ **Code Quality Checks**: PASSED"
          else
            echo "❌ **Code Quality Checks**: FAILED"
          fi
          
          if [ "${{ needs.deployment-ready.result }}" == "success" ]; then
            echo "✅ **Deployment Readiness**: PASSED"
          else
            echo "❌ **Deployment Readiness**: FAILED"  
          fi
          
          echo ""
          echo "### Summary"
          
          if [ "${{ needs.basic-checks.result }}" == "success" ] && [ "${{ needs.deployment-ready.result }}" == "success" ]; then
            echo "🎉 **All checks passed!** Project is ready for deployment."
            exit 0
          else
            echo "⚠️ **Some checks failed.** Please review the failed steps above."
            exit 1
          fi